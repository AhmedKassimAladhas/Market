/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Controls.Tools;
import DB.ConectionDB;
import DB.GoDB;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmed
 */
public class Accounts extends javax.swing.JFrame {

    /**
     * Creates new form Accounts
     */
    public Accounts() {
        initComponents();
        
        job.setVisible(false);
        OneDay.setVisible(false);
        OneDay.setEnabled(false);
        mineDays.setVisible(false);
        mineDays.setEnabled(false);

        Account_Day.setVisible(false);
        Account_Day.setEnabled(false);
        Expenses.setVisible(false);
        Expenses.setEnabled(false);
        Bill.setVisible(false);
        Bill.setEnabled(false);
        ReturnBill.setVisible(false);
        ReturnBill.setEnabled(false);

        hidencosttxt.setVisible(false);
        hidencounttxt.setVisible(false);
        hidepricebuytxt.setVisible(false);
        hidepricesaletxt.setVisible(false);
        idReturntxt.setVisible(false);
        discounttxt.setVisible(false);

        jTExp.getTableHeader().setReorderingAllowed(false);

        jTSBill.getTableHeader().setReorderingAllowed(false);

        jTReturn.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AccGroup = new javax.swing.ButtonGroup();
        Bill = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDateBill = new com.toedter.calendar.JDateChooser();
        goB = new javax.swing.JButton();
        Account_Day = new javax.swing.JPanel();
        rbtnDay = new javax.swing.JRadioButton();
        rbtnDays = new javax.swing.JRadioButton();
        OneDay = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jDateDay = new com.toedter.calendar.JDateChooser();
        goDay = new javax.swing.JButton();
        mineDays = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jDateFrom = new com.toedter.calendar.JDateChooser();
        jDateTo = new com.toedter.calendar.JDateChooser();
        go = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        totalDay = new javax.swing.JTextField();
        totalExp = new javax.swing.JTextField();
        totalBill = new javax.swing.JTextField();
        ReturnBill = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        idBil = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        idLine = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cattxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        counttxt = new javax.swing.JTextField();
        mesutxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        pricetxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        empSeller = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jdatereturn = new com.toedter.calendar.JDateChooser();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTReturn = new javax.swing.JTable();
        save1 = new javax.swing.JButton();
        hidencounttxt = new javax.swing.JTextField();
        hidencosttxt = new javax.swing.JTextField();
        hidepricebuytxt = new javax.swing.JTextField();
        hidepricesaletxt = new javax.swing.JTextField();
        idReturntxt = new javax.swing.JTextField();
        discounttxt = new javax.swing.JTextField();
        Expenses = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        exp = new javax.swing.JTextField();
        datetx = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        timetx = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        notes = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTExp = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        num = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        expensesbtn = new javax.swing.JButton();
        accbtn = new javax.swing.JButton();
        billbtn = new javax.swing.JButton();
        returnbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        Bill.setBackground(new java.awt.Color(177, 1, 1));
        Bill.setLayout(null);

        jTSBill.setBackground(new java.awt.Color(0, 51, 51));
        jTSBill.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTSBill.setForeground(new java.awt.Color(255, 255, 255));
        jTSBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, ""},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "الاجمالي", "الخصم", "سعر الفاتورة", "الكاشير", "التاريخ", "الوقت", "رقم الفاتورة"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTSBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTSBillMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTSBill);

        Bill.add(jScrollPane1);
        jScrollPane1.setBounds(20, 90, 660, 255);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("التاريخ :");
        Bill.add(jLabel1);
        jLabel1.setBounds(470, 32, 54, 20);

        jDateBill.setBackground(new java.awt.Color(204, 204, 204));
        jDateBill.setDateFormatString("yyyy-MM-dd");
        Bill.add(jDateBill);
        jDateBill.setBounds(240, 30, 216, 30);

        goB.setBackground(new java.awt.Color(153, 153, 153));
        goB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        goB.setText("بحث");
        goB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBActionPerformed(evt);
            }
        });
        Bill.add(goB);
        goB.setBounds(160, 30, 70, 30);

        getContentPane().add(Bill);
        Bill.setBounds(10, 180, 700, 360);

        Account_Day.setBackground(new java.awt.Color(0, 51, 51));
        Account_Day.setLayout(null);

        rbtnDay.setBackground(new java.awt.Color(0, 51, 51));
        rbtnDay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbtnDay.setForeground(new java.awt.Color(255, 255, 255));
        rbtnDay.setText("اليوم فقط");
        rbtnDay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnDayItemStateChanged(evt);
            }
        });
        Account_Day.add(rbtnDay);
        rbtnDay.setBounds(580, 40, 81, 23);

        rbtnDays.setBackground(new java.awt.Color(0, 51, 51));
        rbtnDays.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbtnDays.setForeground(new java.awt.Color(255, 255, 255));
        rbtnDays.setText("بالفتره من و إلى");
        rbtnDays.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnDaysItemStateChanged(evt);
            }
        });
        Account_Day.add(rbtnDays);
        rbtnDays.setBounds(540, 70, 119, 23);

        OneDay.setBackground(new java.awt.Color(204, 255, 255));
        OneDay.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("اليوم");
        OneDay.add(jLabel2);
        jLabel2.setBounds(390, 30, 40, 20);

        jDateDay.setDateFormatString("yyyy-MM-dd");
        OneDay.add(jDateDay);
        jDateDay.setBounds(130, 25, 240, 30);

        goDay.setBackground(new java.awt.Color(204, 204, 204));
        goDay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        goDay.setText("بحث");
        goDay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goDayActionPerformed(evt);
            }
        });
        OneDay.add(goDay);
        goDay.setBounds(20, 25, 80, 30);

        Account_Day.add(OneDay);
        OneDay.setBounds(30, 30, 440, 80);

        mineDays.setBackground(new java.awt.Color(204, 255, 255));
        mineDays.setPreferredSize(new java.awt.Dimension(445, 76));
        mineDays.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("من :");
        mineDays.add(jLabel4);
        jLabel4.setBounds(393, 11, 29, 15);

        jDateFrom.setDateFormatString("yyyy-MM-dd");
        mineDays.add(jDateFrom);
        jDateFrom.setBounds(127, 11, 260, 23);

        jDateTo.setDateFormatString("yyyy-MM-dd");
        mineDays.add(jDateTo);
        jDateTo.setBounds(127, 40, 260, 23);

        go.setBackground(new java.awt.Color(204, 204, 204));
        go.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        go.setText("بحث");
        go.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goActionPerformed(evt);
            }
        });
        mineDays.add(go);
        go.setBounds(10, 20, 100, 36);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("إلى :");
        mineDays.add(jLabel6);
        jLabel6.setBounds(393, 44, 29, 15);

        Account_Day.add(mineDays);
        mineDays.setBounds(30, 30, 440, 80);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("إجمالي اليوم");
        Account_Day.add(jLabel3);
        jLabel3.setBounds(50, 170, 130, 30);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("إجمالي الفواتير");
        Account_Day.add(jLabel15);
        jLabel15.setBounds(520, 170, 150, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("إجمالي المصروفات");
        Account_Day.add(jLabel16);
        jLabel16.setBounds(270, 170, 170, 30);

        totalDay.setEditable(false);
        totalDay.setBackground(new java.awt.Color(204, 255, 255));
        totalDay.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Account_Day.add(totalDay);
        totalDay.setBounds(40, 230, 130, 50);

        totalExp.setEditable(false);
        totalExp.setBackground(new java.awt.Color(204, 255, 255));
        totalExp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalExp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Account_Day.add(totalExp);
        totalExp.setBounds(290, 230, 130, 50);

        totalBill.setEditable(false);
        totalBill.setBackground(new java.awt.Color(204, 255, 255));
        totalBill.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalBill.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Account_Day.add(totalBill);
        totalBill.setBounds(519, 230, 130, 50);

        getContentPane().add(Account_Day);
        Account_Day.setBounds(10, 180, 700, 360);

        ReturnBill.setBackground(new java.awt.Color(204, 102, 0));
        ReturnBill.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("رقم الفاتورة");
        ReturnBill.add(jLabel5);
        jLabel5.setBounds(570, 20, 90, 30);

        idBil.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idBil.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idBil.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idBilFocusLost(evt);
            }
        });
        idBil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idBilActionPerformed(evt);
            }
        });
        ReturnBill.add(idBil);
        idBil.setBounds(430, 20, 130, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("الرقم");
        ReturnBill.add(jLabel17);
        jLabel17.setBounds(570, 70, 90, 30);

        idLine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idLine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idLine.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idLineFocusLost(evt);
            }
        });
        idLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idLineActionPerformed(evt);
            }
        });
        ReturnBill.add(idLine);
        idLine.setBounds(430, 70, 130, 30);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(204, 204, 204));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("المنتج");
        ReturnBill.add(jLabel18);
        jLabel18.setBounds(230, 20, 100, 30);

        cattxt.setEditable(false);
        cattxt.setBackground(new java.awt.Color(204, 204, 204));
        cattxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cattxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ReturnBill.add(cattxt);
        cattxt.setBounds(30, 20, 190, 30);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("العدد او الكمية");
        ReturnBill.add(jLabel19);
        jLabel19.setBounds(230, 70, 100, 30);

        counttxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        counttxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        counttxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                counttxtFocusLost(evt);
            }
        });
        counttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                counttxtActionPerformed(evt);
            }
        });
        ReturnBill.add(counttxt);
        counttxt.setBounds(110, 70, 110, 30);

        mesutxt.setEditable(false);
        mesutxt.setBackground(new java.awt.Color(204, 204, 204));
        mesutxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mesutxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ReturnBill.add(mesutxt);
        mesutxt.setBounds(30, 70, 70, 30);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(204, 204, 204));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("السعر");
        ReturnBill.add(jLabel20);
        jLabel20.setBounds(570, 120, 90, 30);

        pricetxt.setEditable(false);
        pricetxt.setBackground(new java.awt.Color(204, 204, 204));
        pricetxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pricetxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ReturnBill.add(pricetxt);
        pricetxt.setBounds(430, 120, 130, 30);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(204, 204, 204));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("البائع");
        ReturnBill.add(jLabel21);
        jLabel21.setBounds(230, 120, 100, 30);

        empSeller.setEditable(false);
        empSeller.setBackground(new java.awt.Color(204, 204, 204));
        empSeller.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        empSeller.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ReturnBill.add(empSeller);
        empSeller.setBounds(30, 120, 190, 30);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(204, 204, 204));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("تاريخ اليوم");
        ReturnBill.add(jLabel22);
        jLabel22.setBounds(570, 170, 90, 30);

        jdatereturn.setBackground(new java.awt.Color(255, 255, 255));
        jdatereturn.setDateFormatString("yyyy-MM-dd");
        ReturnBill.add(jdatereturn);
        jdatereturn.setBounds(430, 170, 130, 30);

        jTReturn.setBackground(new java.awt.Color(0, 51, 51));
        jTReturn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTReturn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTReturn.setForeground(new java.awt.Color(255, 255, 255));
        jTReturn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "السعر", "العدد", "المنتج", "اسم البائع", "الفاتورة", "التاريخ", "التسلسل"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTReturn.setGridColor(new java.awt.Color(255, 255, 255));
        jTReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTReturnMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTReturn);

        ReturnBill.add(jScrollPane5);
        jScrollPane5.setBounds(10, 210, 680, 140);

        save1.setBackground(new java.awt.Color(204, 204, 204));
        save1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        save1.setText("حفظ");
        save1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });
        ReturnBill.add(save1);
        save1.setBounds(50, 170, 130, 30);

        hidencounttxt.setEditable(false);
        hidencounttxt.setBorder(null);
        hidencounttxt.setOpaque(false);
        ReturnBill.add(hidencounttxt);
        hidencounttxt.setBounds(340, 20, 20, 14);

        hidencosttxt.setEditable(false);
        hidencosttxt.setBorder(null);
        hidencosttxt.setOpaque(false);
        ReturnBill.add(hidencosttxt);
        hidencosttxt.setBounds(340, 20, 20, 14);

        hidepricebuytxt.setEditable(false);
        hidepricebuytxt.setBorder(null);
        hidepricebuytxt.setOpaque(false);
        ReturnBill.add(hidepricebuytxt);
        hidepricebuytxt.setBounds(340, 20, 20, 14);

        hidepricesaletxt.setEditable(false);
        hidepricesaletxt.setBorder(null);
        hidepricesaletxt.setOpaque(false);
        ReturnBill.add(hidepricesaletxt);
        hidepricesaletxt.setBounds(340, 20, 20, 14);

        idReturntxt.setEditable(false);
        idReturntxt.setBorder(null);
        idReturntxt.setOpaque(false);
        ReturnBill.add(idReturntxt);
        idReturntxt.setBounds(340, 20, 20, 14);

        discounttxt.setEditable(false);
        discounttxt.setBorder(null);
        discounttxt.setOpaque(false);
        ReturnBill.add(discounttxt);
        discounttxt.setBounds(340, 20, 20, 14);

        getContentPane().add(ReturnBill);
        ReturnBill.setBounds(10, 180, 700, 360);

        Expenses.setBackground(new java.awt.Color(51, 51, 51));
        Expenses.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("اسم موظف الكاشير :");
        Expenses.add(jLabel7);
        jLabel7.setBounds(530, 20, 130, 15);

        EmpName2.setEditable(false);
        EmpName2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        EmpName2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Expenses.add(EmpName2);
        EmpName2.setBounds(330, 20, 190, 25);

        exp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        exp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Expenses.add(exp);
        exp.setBounds(330, 50, 190, 25);

        datetx.setEditable(false);
        datetx.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        datetx.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Expenses.add(datetx);
        datetx.setBounds(50, 20, 170, 25);

        price.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Expenses.add(price);
        price.setBounds(50, 80, 170, 25);

        timetx.setEditable(false);
        timetx.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        timetx.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Expenses.add(timetx);
        timetx.setBounds(50, 50, 170, 25);

        notes.setColumns(20);
        notes.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        notes.setRows(5);
        jScrollPane3.setViewportView(notes);

        Expenses.add(jScrollPane3);
        jScrollPane3.setBounds(330, 80, 190, 60);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("الوقت :");
        Expenses.add(jLabel8);
        jLabel8.setBounds(230, 50, 80, 14);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ملاحظات :");
        Expenses.add(jLabel9);
        jLabel9.setBounds(530, 80, 120, 14);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("تاريخ اليوم :");
        Expenses.add(jLabel10);
        jLabel10.setBounds(230, 20, 80, 14);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("تم صرف :");
        Expenses.add(jLabel11);
        jLabel11.setBounds(530, 50, 120, 14);

        jTExp.setBackground(new java.awt.Color(0, 51, 51));
        jTExp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTExp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTExp.setForeground(new java.awt.Color(255, 255, 255));
        jTExp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "الملاحظات", "المبلغ", "اسم الكاشير", "المصروفات", "الوقت", "التاريخ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTExp.setGridColor(new java.awt.Color(255, 255, 255));
        jTExp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTExpMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTExp);

        Expenses.add(jScrollPane4);
        jScrollPane4.setBounds(30, 190, 640, 160);

        delete.setBackground(new java.awt.Color(204, 204, 204));
        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setText("حذف");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        Expenses.add(delete);
        delete.setBounds(70, 150, 130, 30);

        save.setBackground(new java.awt.Color(204, 204, 204));
        save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        save.setText("حفظ");
        save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        Expenses.add(save);
        save.setBounds(70, 112, 130, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("السعر :");
        Expenses.add(jLabel12);
        jLabel12.setBounds(230, 80, 80, 14);

        num.setBorder(null);
        num.setOpaque(false);
        Expenses.add(num);
        num.setBounds(659, 10, 30, 14);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("بحث :");
        Expenses.add(jLabel14);
        jLabel14.setBounds(630, 160, 33, 15);

        search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });
        Expenses.add(search);
        search.setBounds(330, 160, 290, 25);

        getContentPane().add(Expenses);
        Expenses.setBounds(10, 180, 700, 360);

        expensesbtn.setBackground(new java.awt.Color(51, 51, 51));
        expensesbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        expensesbtn.setForeground(new java.awt.Color(255, 255, 255));
        expensesbtn.setText("مصاريف");
        expensesbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        expensesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expensesbtnActionPerformed(evt);
            }
        });
        getContentPane().add(expensesbtn);
        expensesbtn.setBounds(770, 180, 190, 40);

        accbtn.setBackground(new java.awt.Color(0, 51, 51));
        accbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        accbtn.setForeground(new java.awt.Color(255, 255, 255));
        accbtn.setText("حسابات اليوم");
        accbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        accbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accbtnActionPerformed(evt);
            }
        });
        getContentPane().add(accbtn);
        accbtn.setBounds(770, 260, 190, 40);

        billbtn.setBackground(new java.awt.Color(177, 1, 1));
        billbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        billbtn.setForeground(new java.awt.Color(255, 255, 255));
        billbtn.setText("بحث عن فاتورة");
        billbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        billbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billbtnActionPerformed(evt);
            }
        });
        getContentPane().add(billbtn);
        billbtn.setBounds(770, 340, 190, 40);

        returnbtn.setBackground(new java.awt.Color(204, 102, 0));
        returnbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        returnbtn.setForeground(new java.awt.Color(255, 255, 255));
        returnbtn.setText("مرتجع");
        returnbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbtnActionPerformed(evt);
            }
        });
        getContentPane().add(returnbtn);
        returnbtn.setBounds(770, 420, 190, 40);

        exitbtn.setBackground(new java.awt.Color(255, 153, 102));
        exitbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exitbtn.setText("خروج");
        exitbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        getContentPane().add(exitbtn);
        exitbtn.setBounds(770, 500, 190, 40);

        job.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        job.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(job);
        job.setBounds(680, 40, 90, 30);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/supermarket-1.jpg"))); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(0, 0, 1001, 601);

        setSize(new java.awt.Dimension(1000, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void time() {
        new Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss a");
                String texts_date = sdf.format(new Date());
                timetx.setText(texts_date);
            }

        }).start();

    }

    public void listExp() {
        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("ملاحظات");
        table.addColumn("المبلغ");
        table.addColumn("اسم الكاشير");
        table.addColumn("المصروفات");
        table.addColumn("الوقت");
        table.addColumn("التاريخ");

        try {
            Connection con = ConectionDB.setcon();
            String sqls = "select * from expenses ";

            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sqls);

            while (rs.next()) {
                table.addRow(new Object[]{
                    rs.getString(7),
                    rs.getString(6),
                    rs.getString(2),
                    rs.getString(5),
                    rs.getString(4),
                    rs.getString(3),});
                jTExp.setModel(table);

            }
        } catch (Exception ex) {

        }
    }

    public void getSellerEmp() {
        try {
            Connection con = ConectionDB.setcon();
            Statement st = con.createStatement();
            String sql = "select empname,discount from bill where numberbill=" + idBil.getText();
            ResultSet rs = st.executeQuery(sql);
            String nameEmp = "";
            String discount = "";
            while (rs.next()) {
                nameEmp = rs.getString("empname");
                discount = rs.getString("discount");
                System.out.println("empname :" + nameEmp);
                System.out.println("discount :" + discount);
            }
            empSeller.setText(nameEmp);
            discounttxt.setText(discount);
        } catch (Exception e) {

        }
    }

    public void setReturnBillData() {
        try {
            Connection con = ConectionDB.setcon();
            Statement st = con.createStatement();
            String sql = "select * from billline where numberbill=" + idBil.getText() + " and number=" + idLine.getText();
            ResultSet rs = st.executeQuery(sql);
            String cat = "";
            String count = "0";
            String cost = "0";
            String priceBuy = "0";
            String priceSale = "0";
            while (rs.next()) {
                cat = rs.getString(6);
                count = rs.getString(10);
                cost = rs.getString(11);
                priceBuy = rs.getString(7);
                priceSale = rs.getString(8);
            }

            cattxt.setText(cat);
            counttxt.setText(count);
            hidencounttxt.setText(count);
            pricetxt.setText(cost);
            hidencosttxt.setText(cost);
            hidepricebuytxt.setText(priceBuy);
            hidepricesaletxt.setText(priceSale);

            String measuring = "";
            Connection conn = ConectionDB.setcon();
            Statement st2 = conn.createStatement();
            String sql2 = "select measuring from categories where Category like'%" + cattxt.getText() + "%'";
            ResultSet rs2 = st2.executeQuery(sql2);

            while (rs2.next()) {
                measuring = rs2.getString("measuring");
                System.out.println("measuring :" + measuring);
            }
            mesutxt.setText(measuring);

        } catch (Exception e) {

        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DB.GoDB.icon(this);
        AccGroup.add(rbtnDay);
        AccGroup.add(rbtnDays);
        time();

        Date d = new Date();
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        datetx.setText(f.format(d));
        num.setText(DB.GoDB.autoNumber("expenses", "number"));
        num.setVisible(false);
        delete.setEnabled(false);
        
        if(!job.getText().equals("مدير")){
            accbtn.setEnabled(false);
            returnbtn.setEnabled(false);
        }
    }//GEN-LAST:event_formWindowOpened

    private void rbtnDayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnDayItemStateChanged
        OneDay.setVisible(true);
        OneDay.setEnabled(true);
        mineDays.setVisible(false);
        mineDays.setEnabled(false);
        totalBill.setText("0");
        totalExp.setText("0");
        totalDay.setText("0");
        jDateDay.setCalendar(null);
    }//GEN-LAST:event_rbtnDayItemStateChanged

    private void rbtnDaysItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnDaysItemStateChanged
        OneDay.setVisible(false);
        OneDay.setEnabled(false);
        mineDays.setVisible(true);
        mineDays.setEnabled(true);
        totalBill.setText("0");
        totalExp.setText("0");
        totalDay.setText("0");
        jDateFrom.setCalendar(null);
        jDateTo.setCalendar(null);
    }//GEN-LAST:event_rbtnDaysItemStateChanged

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitbtnActionPerformed

    private void expensesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expensesbtnActionPerformed
        Account_Day.setVisible(false);
        Account_Day.setEnabled(false);
        Expenses.setVisible(true);
        Expenses.setEnabled(true);
        Bill.setVisible(false);
        Bill.setEnabled(false);
        ReturnBill.setVisible(false);
        ReturnBill.setEnabled(false);

        totalBill.setText("0");
        totalExp.setText("0");
        totalDay.setText("0");
        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("الإجمالي");
        table.addColumn("الخصم");
        table.addColumn("سعر الفاتورة");
        table.addColumn("الكاشير");
        table.addColumn("التاريخ");
        table.addColumn("الوقت");
        table.addColumn("رقم الفاتورة");
        table.setRowCount(20);
        jTSBill.setModel(table);
        listExp();
        num.setText(DB.GoDB.autoNumber("expenses", "number"));
    }//GEN-LAST:event_expensesbtnActionPerformed

    private void accbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accbtnActionPerformed
        Account_Day.setVisible(true);
        Account_Day.setEnabled(true);
        Expenses.setVisible(false);
        Expenses.setEnabled(false);
        Bill.setVisible(false);
        Bill.setEnabled(false);
        ReturnBill.setVisible(false);
        ReturnBill.setEnabled(false);

        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("الإجمالي");
        table.addColumn("الخصم");
        table.addColumn("سعر الفاتورة");
        table.addColumn("الكاشير");
        table.addColumn("التاريخ");
        table.addColumn("الوقت");
        table.addColumn("رقم الفاتورة");
        table.setRowCount(20);
        jTSBill.setModel(table);
    }//GEN-LAST:event_accbtnActionPerformed

    private void billbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billbtnActionPerformed
        Account_Day.setVisible(false);
        Account_Day.setEnabled(false);
        Expenses.setVisible(false);
        Expenses.setEnabled(false);
        Bill.setVisible(true);
        Bill.setEnabled(true);
        ReturnBill.setVisible(false);
        ReturnBill.setEnabled(false);

        totalBill.setText("0");
        totalExp.setText("0");
        totalDay.setText("0");
    }//GEN-LAST:event_billbtnActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if ("".equals(EmpName2.getText()) || "".equals(exp.getText()) || "".equals(datetx.getText()) || "".equals(timetx.getText())) {
            JOptionPane.showMessageDialog(this, "يجب ملئ البيانات", "خطأ", JOptionPane.WARNING_MESSAGE);
        } else {
            int co = JOptionPane.showConfirmDialog(this, "هل تريد حفظ البيانات ؟");
            if (co == JOptionPane.YES_OPTION) {
                String adds = "INSERT INTO EXPENSES VALUES (" + num.getText() + ", '" + EmpName2.getText() + "', '" + datetx.getText() + "', '" + timetx.getText() + "', '" + exp.getText() + "', '" + price.getText() + "', '" + notes.getText() + "')";
                boolean ifS = DB.GoDB.runNunQuery(adds);
                if (ifS) {
                    JOptionPane.showMessageDialog(this, "تم حفظ البيانات", "نجح", JOptionPane.WARNING_MESSAGE);
                    exp.setText("");
                    notes.setText("");
                    price.setText("");
                    listExp();
                    delete.setEnabled(false);
                    num.setText(DB.GoDB.autoNumber("expenses", "number"));
                } else {
                    JOptionPane.showMessageDialog(this, "لم يتم حفظ البيانات", "خطأ", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_saveActionPerformed

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("ملاحظات");
        table.addColumn("اسم الكاشير");
        table.addColumn("المصروفات");
        table.addColumn("الوقت");
        table.addColumn("التاريخ");

        try {
            Connection con = ConectionDB.setcon();
            String sqls = "select * from expenses where DateExp like '%" + search.getText() + "%' or Expenses like '%" + search.getText() + "%' or EmpName like '%" + search.getText() + "%'";

            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sqls);

            while (rs.next()) {
                table.addRow(new Object[]{
                    rs.getString(7),
                    rs.getString(2),
                    rs.getString(5),
                    rs.getString(4),
                    rs.getString(3),});
                jTExp.setModel(table);

            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_searchKeyTyped

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int d = JOptionPane.showConfirmDialog(this, "هل تريد حذف المصروف المحدد ؟");
        int row = jTExp.getSelectedRow();
        String da = jTExp.getValueAt(row, 5).toString();
        if (d == JOptionPane.YES_OPTION) {
            if (da.equals(datetx.getText())) {
                String numA = jTExp.getValueAt(row, 5).toString();
                String numT = jTExp.getValueAt(row, 4).toString();
                String strD = "DELETE FROM EXPENSES WHERE DATEEXP = '" + numA + "' AND TIMEEXP = '" + numT + "'";
                boolean ifD = DB.GoDB.runNunQuery(strD);
                if (ifD) {
                    JOptionPane.showMessageDialog(null, "تم حذف المصروف المحدد", "نجح", JOptionPane.WARNING_MESSAGE);
                    listExp();
                    delete.setEnabled(false);
                    num.setText(DB.GoDB.autoNumber("expenses", "number"));
                } else {
                    JOptionPane.showMessageDialog(null, "لم يتم حذف المصروف", "خطأ", JOptionPane.WARNING_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "لا يمكن حذف إلا مصروف اليوم", "خطأ", JOptionPane.WARNING_MESSAGE);
            }
        } else {

        }
    }//GEN-LAST:event_deleteActionPerformed

    private void jTExpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTExpMouseClicked
        delete.setEnabled(true);
    }//GEN-LAST:event_jTExpMouseClicked

    private void goBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBActionPerformed
        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("الإجمالي");
        table.addColumn("الخصم");
        table.addColumn("سعر الفاتورة");
        table.addColumn("الكاشير");
        table.addColumn("التاريخ");
        table.addColumn("الوقت");
        table.addColumn("رقم الفاتورة");

        try {
            Connection con = ConectionDB.setcon();
            Statement st = con.createStatement();
            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String d = f.format(jDateBill.getDate());
            String sqls = "SELECT * FROM BILL WHERE DATEBILL='" + d + "'";
            ResultSet rs = st.executeQuery(sqls);

            while (rs.next()) {
                table.addRow(new Object[]{
                    rs.getString(8),
                    rs.getString(7),
                    rs.getString(6),
                    rs.getString(4),
                    rs.getString(3),
                    rs.getString(2),
                    rs.getString(1),});
                jTSBill.setModel(table);
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_goBActionPerformed

    private void jTSBillMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTSBillMouseReleased
        int row = jTSBill.getSelectedRow();
        String numBill = jTSBill.getValueAt(row, 6).toString();

        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            DefaultTableModel table = new DefaultTableModel();
            table.addColumn("السعر");
            table.addColumn("العدد او الكمية");
            table.addColumn("القسم");
            table.addColumn("اسم الصنف");
            table.addColumn("رقم الفاتورة");
            table.addColumn("الرقم");

            try {
                Connection con = ConectionDB.setcon();
                String sqls = "SELECT * FROM BILLLINE WHERE NUMBERBILL=" + numBill;
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sqls);

                while (rs.next()) {
                    table.addRow(new Object[]{
                        rs.getString(11),
                        rs.getString(10),
                        rs.getString(5),
                        rs.getString(6),
                        rs.getString(4),
                        rs.getString(3),});
                    details.jTdetails.setModel(table);
                }
            } catch (Exception ex) {
            }
            details de = new details();
            de.setDefaultCloseOperation(2);
            de.setVisible(true);

        }
    }//GEN-LAST:event_jTSBillMouseReleased

    private void goDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goDayActionPerformed
        try {
            totalBill.setText("0");
            totalExp.setText("0");
            totalDay.setText("0");
            String totalBil = "0";

            Connection cond = ConectionDB.setcon();
            Statement stm = cond.createStatement();

            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String dateD = f.format(jDateDay.getDate());

            String sqls = "select sum(total) as total from bill where datebill='" + dateD + "'";
            ResultSet rs = stm.executeQuery(sqls);

            while (rs.next()) {
                totalBil = rs.getString("total");
            }

            if (totalBil == null || "0".equals(totalBil)) {
                totalBill.setText("0");
            } else {
                totalBill.setText(totalBil);
            }

            String Exp = "0";

            Connection conE = ConectionDB.setcon();
            Statement stmE = conE.createStatement();
            String sqlsE = "select sum(price) as Exp from expenses where dateexp='" + dateD + "'";
            ResultSet rsE = stmE.executeQuery(sqlsE);

            while (rsE.next()) {
                Exp = rsE.getString("Exp");
            }

            if (Exp == null || "0".equals(Exp)) {
                totalExp.setText("0");
            } else {
                totalExp.setText(Exp);
            }

            if ("0".equals(totalExp.getText())) {
                totalDay.setText(totalBill.getText());
            } else {
                double totald = Double.valueOf(totalBil) - Double.valueOf(Exp);
                totalDay.setText(String.valueOf(totald));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_goDayActionPerformed

    private void goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goActionPerformed
        try {
            totalBill.setText("0");
            totalExp.setText("0");
            totalDay.setText("0");
            String totalBil = "";

            Connection cond = ConectionDB.setcon();
            Statement stm = cond.createStatement();

            SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String dateDF = f.format(jDateFrom.getDate());
            String dateDT = f.format(jDateTo.getDate());

            String sqls = "select sum(total) as total from bill where datebill  between '" + dateDF + "' and '" + dateDT + "'";
            ResultSet rs = stm.executeQuery(sqls);

            while (rs.next()) {
                totalBil = rs.getString("total");
            }

            if (totalBil == null || "".equals(totalBil)) {
                totalBill.setText("0");
            } else {
                totalBill.setText(totalBil);
            }

            String Exp = "";

            Connection conE = ConectionDB.setcon();
            Statement stmE = conE.createStatement();

            String sqlsE = "select sum(price) as Exp from expenses where dateexp between '" + dateDF + "' and '" + dateDT + "'";
            ResultSet rsE = stmE.executeQuery(sqlsE);

            while (rsE.next()) {
                Exp = rsE.getString("Exp");
            }

            if (Exp == null || "".equals(Exp)) {
                totalExp.setText("0");
            } else {
                totalExp.setText(Exp);
            }

            if ("0".equals(totalExp.getText())) {
                totalDay.setText(totalBill.getText());
            } else {
                double totald = Double.valueOf(totalBil) - Double.valueOf(Exp);
                totalDay.setText(String.valueOf(totald));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_goActionPerformed

    private void returnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbtnActionPerformed
        Account_Day.setVisible(false);
        Account_Day.setEnabled(false);
        Expenses.setVisible(false);
        Expenses.setEnabled(false);
        Bill.setVisible(false);
        Bill.setEnabled(false);
        ReturnBill.setVisible(true);
        ReturnBill.setEnabled(true);
        Tools.clearText(ReturnBill);
        jdatereturn.setCalendar(null);
        idReturntxt.setText(GoDB.autoNumber("returnbill", "id"));
    }//GEN-LAST:event_returnbtnActionPerformed

    private void counttxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_counttxtFocusLost
        try {
            if ("زجاجه".equals(mesutxt.getText()) || "متر".equals(mesutxt.getText()) || "كيس".equals(mesutxt.getText()) || "علبة".equals(mesutxt.getText())) {
                double tota = Integer.parseInt(hidepricesaletxt.getText()) * Double.parseDouble(counttxt.getText());
                pricetxt.setText(String.valueOf(tota));
            } else {
                pricetxt.setEditable(true);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_counttxtFocusLost

    private void counttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_counttxtActionPerformed
        try {
            if ("زجاجه".equals(mesutxt.getText()) || "متر".equals(mesutxt.getText()) || "كيس".equals(mesutxt.getText()) || "علبة".equals(mesutxt.getText())) {
                double tota = Integer.parseInt(hidepricesaletxt.getText()) * Double.parseDouble(counttxt.getText());
                pricetxt.setText(String.valueOf(tota));
            } else {
                pricetxt.setEditable(true);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_counttxtActionPerformed

    private void jTReturnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTReturnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTReturnMouseClicked

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        if (idReturntxt.equals("") || jdatereturn.getCalendar() == null || idBil.equals("") || idLine.equals("") || counttxt.equals("") || pricetxt.equals("")) {
            Tools.msgbox("ادخل البيانات اولا !!");
        } else {
            // استعلام عن عدد المنتج في المخزن 
            try {
                Connection c = ConectionDB.setcon();
                Statement stm = c.createStatement();
                String sqls = "select count as count1 from categories where category ='" + cattxt.getText() + "'";
                ResultSet rs = stm.executeQuery(sqls);
                String num = "";
                while (rs.next()) {
                    num = stm.getResultSet().getString("count1");
                }
                c.close();
                if (num == null || "".equals(num)) {
                    JOptionPane.showMessageDialog(null, "لايوجد من هذا الصنف");
                } else {
                    if (Integer.parseInt(counttxt.getText()) > Integer.parseInt(hidencounttxt.getText())) {
                        Tools.msgbox("هذا العدد اكبر من عدد البضاعة المباعة !!");
                        System.out.println("no done");
                        counttxt.requestFocus();
                    } else {

                        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                        String dateReturn = f.format(jdatereturn.getDate());
                        String sql = "insert into returnbill values(" + idReturntxt.getText() + ", " + idBil.getText() + ", " + idLine.getText() + ", '" + dateReturn + "', '" + empSeller.getText() + "','" + cattxt.getText() + "', " + counttxt.getText() + ", '" + pricetxt.getText() + "')";
                        boolean ifAdd = GoDB.runNunQuery(sql);
                        if (ifAdd) {
                            Tools.msgbox("تم التسجيل بنجاح");
                        }

                        // اضافة المنتجع المرتجع الى المخزن
                        int countTotal = Integer.parseInt(num) + Integer.parseInt(counttxt.getText());
                        String updateStored = "UPDATE categories SET COUNT = '" + countTotal + "' WHERE CATEGORY = '" + cattxt.getText() + "'";
                        GoDB.runNunQuery(updateStored);
                        System.out.println("done stored");

                        // انقاص المنتج المرتجع من تفاصيل الفاتورة
                        int countTotalLess = Integer.parseInt(hidencounttxt.getText()) - Integer.parseInt(counttxt.getText());
                        Double costTotalLess = Double.parseDouble(hidencosttxt.getText()) - Double.parseDouble(pricetxt.getText());

                        String updateBillline = "UPDATE billline SET COUNT = " + countTotalLess + " , PRICE = " + costTotalLess + " WHERE "
                                + " numberbill = " + idBil.getText() + " and number = " + idLine.getText();
                        GoDB.runNunQuery(updateBillline);
                        System.out.println("done Billline");

                        // الاستعلام عن مجموع او اجمالي الفاتورة
                        Connection con2 = ConectionDB.setcon();
                        Statement stm2 = con2.createStatement();
                        String sqls2 = "select sum(price) as pr , sum(price_buy * count) as prb from billline where numberbill=" + idBil.getText();
                        ResultSet rs2 = stm2.executeQuery(sqls2);
                        String numTotal = "";
                        String numTotalBuy = "";
                        while (rs2.next()) {
                            numTotal = rs2.getString("pr");
                            numTotalBuy = rs2.getString("prb");
                        }

                        // انقاص المنتج المرتجع من الفاتورة
                        Double total = Double.parseDouble(numTotal) - Double.parseDouble(discounttxt.getText());
                        String updateBill = "UPDATE bill SET total_buyPrice = '" + numTotalBuy + "' "
                                + ", totalbilll = '" + numTotal + "', total = '" + total + "' WHERE "
                                + " numberbill = " + idBil.getText();
                        GoDB.runNunQuery(updateBill);
                        System.out.println("done Bill");

                        Tools.clearText(ReturnBill);
                        jdatereturn.setCalendar(null);
                        idReturntxt.setText(GoDB.autoNumber("returnbill", "id"));
                        GoDB.fillToTable("select cost,count,cat,seller_emp,date_today,number_bill,id from returnbill ", jTReturn);
                    }
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_save1ActionPerformed

    private void idBilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idBilActionPerformed
        setReturnBillData();
        getSellerEmp();
    }//GEN-LAST:event_idBilActionPerformed

    private void idBilFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idBilFocusLost
        setReturnBillData();
        getSellerEmp();
    }//GEN-LAST:event_idBilFocusLost

    private void idLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idLineActionPerformed
        setReturnBillData();
    }//GEN-LAST:event_idLineActionPerformed

    private void idLineFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idLineFocusLost
        setReturnBillData();
    }//GEN-LAST:event_idLineFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accounts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup AccGroup;
    private javax.swing.JPanel Account_Day;
    private javax.swing.JPanel Bill;
    public static final javax.swing.JTextField EmpName2 = new javax.swing.JTextField();
    private javax.swing.JPanel Expenses;
    private javax.swing.JPanel OneDay;
    private javax.swing.JPanel ReturnBill;
    private javax.swing.JButton accbtn;
    private javax.swing.JButton billbtn;
    private javax.swing.JTextField cattxt;
    private javax.swing.JTextField counttxt;
    private javax.swing.JTextField datetx;
    private javax.swing.JButton delete;
    private javax.swing.JTextField discounttxt;
    private javax.swing.JTextField empSeller;
    private javax.swing.JButton exitbtn;
    private javax.swing.JTextField exp;
    private javax.swing.JButton expensesbtn;
    private javax.swing.JButton go;
    private javax.swing.JButton goB;
    private javax.swing.JButton goDay;
    private javax.swing.JTextField hidencosttxt;
    private javax.swing.JTextField hidencounttxt;
    private javax.swing.JTextField hidepricebuytxt;
    private javax.swing.JTextField hidepricesaletxt;
    private javax.swing.JTextField idBil;
    private javax.swing.JTextField idLine;
    private javax.swing.JTextField idReturntxt;
    private com.toedter.calendar.JDateChooser jDateBill;
    private com.toedter.calendar.JDateChooser jDateDay;
    private com.toedter.calendar.JDateChooser jDateFrom;
    private com.toedter.calendar.JDateChooser jDateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static final javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTExp;
    private javax.swing.JTable jTReturn;
    public static final javax.swing.JTable jTSBill = new javax.swing.JTable();
    private com.toedter.calendar.JDateChooser jdatereturn;
    public static final javax.swing.JLabel job = new javax.swing.JLabel();
    private javax.swing.JTextField mesutxt;
    private javax.swing.JPanel mineDays;
    private javax.swing.JTextArea notes;
    private javax.swing.JTextField num;
    private javax.swing.JTextField price;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JRadioButton rbtnDay;
    private javax.swing.JRadioButton rbtnDays;
    private javax.swing.JButton returnbtn;
    private javax.swing.JButton save;
    private javax.swing.JButton save1;
    private javax.swing.JTextField search;
    private javax.swing.JTextField timetx;
    private javax.swing.JTextField totalBill;
    private javax.swing.JTextField totalDay;
    private javax.swing.JTextField totalExp;
    // End of variables declaration//GEN-END:variables
}
