/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import DB.ConectionDB;
import DB.GoDB;
import static Forms.print.printbill;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmed
 */
public class Sale extends javax.swing.JFrame {

    /**
     * Creates new form Sale
     */
    public Sale() {
        initComponents();
        returnB.setEnabled(false);
        numid.setVisible(false);
        newCat.setEnabled(false);
        hidepricebuytxt.setVisible(false);
        hidepricesaletxt.setVisible(false);
        totalbuytxt.setVisible(false);
        saveAndPrint.setEnabled(false);
        save.setEnabled(false);
        delete.setEnabled(false);
        jTsale.getTableHeader().setReorderingAllowed(false);
        print.setEnabled(false);
        EmpNameB.setBackground(new Color(0, 0, 0, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idBil = new javax.swing.JTextField();
        timetx = new javax.swing.JTextField();
        jDate = new javax.swing.JTextField();
        idLine = new javax.swing.JTextField();
        jsec = new javax.swing.JComboBox<>();
        jcat = new javax.swing.JComboBox<>();
        barcode = new javax.swing.JTextField();
        count = new javax.swing.JTextField();
        mesu = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        priceAfter = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTsale = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        paied = new javax.swing.JTextField();
        discount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        remaining = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cost = new javax.swing.JTextField();
        returnB = new javax.swing.JButton();
        totalbuytxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        newCat = new javax.swing.JButton();
        saveAndPrint = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        countCat = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        print = new javax.swing.JButton();
        home = new javax.swing.JButton();
        numid = new javax.swing.JTextField();
        hidepricebuytxt = new javax.swing.JTextField();
        hidepricesaletxt = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("رقم الفاتورة");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(1240, 100, 90, 17);

        idBil.setEditable(false);
        idBil.setBackground(new java.awt.Color(204, 204, 204));
        idBil.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idBil.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(idBil);
        idBil.setBounds(1100, 100, 130, 25);

        timetx.setEditable(false);
        timetx.setBackground(new java.awt.Color(204, 204, 204));
        timetx.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        timetx.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(timetx);
        timetx.setBounds(1100, 140, 130, 25);

        jDate.setEditable(false);
        jDate.setBackground(new java.awt.Color(204, 204, 204));
        jDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(jDate);
        jDate.setBounds(1100, 180, 130, 25);

        idLine.setEditable(false);
        idLine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idLine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(idLine);
        idLine.setBounds(1030, 260, 190, 30);

        jsec.setBackground(new java.awt.Color(204, 204, 204));
        jsec.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jsecItemStateChanged(evt);
            }
        });
        getContentPane().add(jsec);
        jsec.setBounds(1030, 310, 190, 30);

        jcat.setBackground(new java.awt.Color(204, 204, 204));
        jcat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcatItemStateChanged(evt);
            }
        });
        getContentPane().add(jcat);
        jcat.setBounds(1030, 360, 190, 30);

        barcode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        barcode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                barcodeKeyTyped(evt);
            }
        });
        getContentPane().add(barcode);
        barcode.setBounds(710, 260, 190, 30);

        count.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        count.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        count.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                countFocusLost(evt);
            }
        });
        count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countActionPerformed(evt);
            }
        });
        count.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                countKeyTyped(evt);
            }
        });
        getContentPane().add(count);
        count.setBounds(790, 310, 110, 30);

        mesu.setEditable(false);
        mesu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mesu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(mesu);
        mesu.setBounds(709, 310, 70, 30);

        price.setEditable(false);
        price.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });
        getContentPane().add(price);
        price.setBounds(830, 360, 70, 30);

        priceAfter.setEditable(false);
        priceAfter.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        priceAfter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(priceAfter);
        priceAfter.setBounds(710, 360, 60, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("السعر:");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(780, 370, 39, 15);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("وقت الفاتورة");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1240, 140, 82, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("تاريخ الفاتورة");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(1240, 180, 90, 17);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("الرقم :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(1240, 270, 90, 15);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("اسم الصنف :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(1240, 370, 90, 15);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("اسم القسم :");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(1240, 320, 90, 15);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("سعر البيع :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(910, 370, 100, 15);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("رقم الباركود :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(910, 270, 100, 15);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("العدد او الكمية :");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(910, 320, 100, 15);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane1.setOpaque(false);

        jTsale.setBackground(new java.awt.Color(0, 153, 0));
        jTsale.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTsale.setForeground(new java.awt.Color(255, 255, 255));
        jTsale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, "", "", null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "السعر", "العدد او الكمية", "القسم", "اسم الصنف", "رقم الفاتورة", "الرقم"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTsale.setGridColor(new java.awt.Color(51, 51, 0));
        jTsale.setOpaque(false);
        jTsale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTsaleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTsale);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 460, 1320, 170);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("المدفوع :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(382, 35, 61, 17);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("الخصم :");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(382, 73, 61, 17);

        paied.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        paied.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        paied.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paiedActionPerformed(evt);
            }
        });
        jPanel1.add(paied);
        paied.setBounds(278, 33, 94, 25);

        discount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        discount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });
        jPanel1.add(discount);
        discount.setBounds(278, 73, 94, 25);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("الباقي :");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(200, 35, 69, 17);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 204));
        jLabel15.setText("الاجمالي :");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(200, 73, 69, 17);

        remaining.setEditable(false);
        remaining.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remaining.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        remaining.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                remainingKeyTyped(evt);
            }
        });
        jPanel1.add(remaining);
        remaining.setBounds(110, 33, 76, 25);

        total.setEditable(false);
        total.setBackground(new java.awt.Color(14, 97, 10));
        total.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        total.setForeground(new java.awt.Color(204, 204, 204));
        total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(total);
        total.setBounds(110, 73, 76, 25);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel16.setText("الحساب النهائي");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(473, 11, 76, 13);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("المبلغ المطلوب");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(460, 40, 87, 20);

        cost.setEditable(false);
        cost.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cost.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                costKeyTyped(evt);
            }
        });
        jPanel1.add(cost);
        cost.setBounds(464, 70, 80, 25);

        returnB.setBackground(new java.awt.Color(204, 204, 204));
        returnB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        returnB.setText("رد الباقي");
        returnB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBActionPerformed(evt);
            }
        });
        jPanel1.add(returnB);
        returnB.setBounds(10, 35, 90, 25);

        totalbuytxt.setEditable(false);
        totalbuytxt.setBorder(null);
        totalbuytxt.setOpaque(false);
        jPanel1.add(totalbuytxt);
        totalbuytxt.setBounds(300, 10, 20, 14);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(500, 100, 560, 110);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        newCat.setBackground(new java.awt.Color(102, 102, 0));
        newCat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        newCat.setForeground(new java.awt.Color(204, 204, 204));
        newCat.setText("صنف جديد");
        newCat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCatActionPerformed(evt);
            }
        });
        jPanel2.add(newCat);
        newCat.setBounds(485, 22, 120, 56);

        saveAndPrint.setBackground(new java.awt.Color(102, 102, 0));
        saveAndPrint.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        saveAndPrint.setForeground(new java.awt.Color(204, 204, 204));
        saveAndPrint.setText("حفظ وطباعه");
        saveAndPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveAndPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAndPrintActionPerformed(evt);
            }
        });
        jPanel2.add(saveAndPrint);
        saveAndPrint.setBounds(258, 22, 120, 56);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("عدد الاصناف");
        jPanel2.add(jLabel17);
        jLabel17.setBounds(390, 20, 81, 17);

        countCat.setEditable(false);
        countCat.setBackground(new java.awt.Color(14, 97, 10));
        countCat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        countCat.setForeground(new java.awt.Color(204, 204, 204));
        countCat.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(countCat);
        countCat.setBounds(390, 40, 80, 32);

        save.setBackground(new java.awt.Color(102, 102, 0));
        save.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        save.setForeground(new java.awt.Color(204, 204, 204));
        save.setText("حفظ فقط");
        save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel2.add(save);
        save.setBounds(133, 22, 120, 56);

        print.setBackground(new java.awt.Color(102, 102, 0));
        print.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        print.setForeground(new java.awt.Color(204, 204, 204));
        print.setText("طباعه");
        print.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        jPanel2.add(print);
        print.setBounds(10, 22, 120, 56);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(40, 290, 610, 100);

        home.setBackground(new java.awt.Color(255, 153, 102));
        home.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        home.setText("الصفحة الرئيسية");
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        getContentPane().add(home);
        home.setBounds(40, 240, 190, 40);

        EmpNameB.setEditable(false);
        EmpNameB.setFont(new java.awt.Font("Arial", 1, 19)); // NOI18N
        EmpNameB.setForeground(new java.awt.Color(14, 97, 10));
        EmpNameB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EmpNameB.setBorder(null);
        EmpNameB.setOpaque(false);
        getContentPane().add(EmpNameB);
        EmpNameB.setBounds(1090, 40, 240, 30);

        numid.setBorder(null);
        numid.setOpaque(false);
        getContentPane().add(numid);
        numid.setBounds(1200, 220, 40, 20);

        hidepricebuytxt.setEditable(false);
        hidepricebuytxt.setBorder(null);
        hidepricebuytxt.setOpaque(false);
        getContentPane().add(hidepricebuytxt);
        hidepricebuytxt.setBounds(1200, 220, 20, 14);

        hidepricesaletxt.setEditable(false);
        hidepricesaletxt.setBorder(null);
        hidepricesaletxt.setOpaque(false);
        getContentPane().add(hidepricesaletxt);
        hidepricesaletxt.setBounds(1200, 220, 20, 14);

        delete.setBackground(new java.awt.Color(102, 102, 0));
        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(204, 204, 204));
        delete.setText("حذف صنف");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(1140, 410, 190, 40);

        add.setBackground(new java.awt.Color(102, 102, 0));
        add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(204, 204, 204));
        add.setText("إضافه");
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(700, 410, 190, 40);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/grocery-store.jpg"))); // NOI18N
        getContentPane().add(jLabel18);
        jLabel18.setBounds(0, 0, 1366, 701);

        setSize(new java.awt.Dimension(1381, 739));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void time() {
        new Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss a");
                String texts_date = sdf.format(new Date());
                timetx.setText(texts_date);
            }

        }).start();

    }

    public void listSale() {
//        DefaultTableModel table = new DefaultTableModel();
//        table.addColumn("السعر");
//        table.addColumn("العدد او الكمية");
//        table.addColumn("القسم");
//        table.addColumn("اسم الصنف");
//        table.addColumn("رقم الفاتورة");
//        table.addColumn("الرقم");

        GoDB.fillToTable("SELECT price,count,section,category,numberbill,number FROM BILLLINE WHERE NUMBERBILL=" + idBil.getText(), jTsale);
//        try {
//            Connection con = ConectionDB.setcon();
//            String sqls = "SELECT * FROM BILLLINE WHERE NUMBERBILL=" + idBil.getText();
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(sqls);
//
//            while (rs.next()) {
//                table.addRow(new Object[]{
//                    rs.getString(7),
//                    rs.getString(6),
//                    rs.getString(4),
//                    rs.getString(5),
//                    rs.getString(3),
//                    rs.getString(2),});
//                jTsale.setModel(table);
//            }
//        } catch (Exception ex) {
//        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DB.GoDB.icon(this);
        time();
        Date d = new Date();
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");

        jDate.setText(f.format(d));

        DB.GoDB.fillCompo("sections", "section", jsec);
        DB.GoDB.fillCompo2("categories", "category", "section", jsec.getSelectedItem(), jcat);
        idBil.setText(DB.GoDB.autoNumber("bill", "numberbill"));
        idLine.setText(DB.GoDB.auto("billline", "number", "numberbill", idBil.getText()));
        numid.setText(DB.GoDB.autoNumber("billline", "numberLine"));
        jsec.setSelectedItem(null);
        jcat.setSelectedItem(null);
        listSale();
    }//GEN-LAST:event_formWindowOpened

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        this.dispose();
        new Home().setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void remainingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remainingKeyTyped

    }//GEN-LAST:event_remainingKeyTyped

    private void barcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeKeyTyped
        try {
            Connection con = ConectionDB.setcon();
            Statement stm = con.createStatement();
            String sqls = "select * from categories where barcode ='" + barcode.getText() + "'";
            ResultSet rs = stm.executeQuery(sqls);
            String s = "";
            String c = "";
            String p = "0";
            String m = "";
            while (rs.next()) {
                s = rs.getString(3);
                c = rs.getString(4);
                p = rs.getString(5);
                m = rs.getString(8);
            }
            jsec.setSelectedItem(s);
            jcat.setSelectedItem(c);
            price.setText(p);
            mesu.setText(m);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_barcodeKeyTyped

    private void jcatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcatItemStateChanged
        try {
            Connection con = ConectionDB.setcon();
            Statement stm = con.createStatement();
            String sqls = "select * from categories where category ='" + jcat.getSelectedItem() + "'";
            ResultSet rs = stm.executeQuery(sqls);
            String s = "";
            String b = "";
            String p = "0";
            String m = "";

            String buy = "0";
            while (rs.next()) {
                s = rs.getString(3);
                b = rs.getString(2);
                p = rs.getString(5);
                buy = rs.getString(6);
                m = rs.getString(8);

            }
            jsec.setSelectedItem(s);
            barcode.setText(b);
            price.setText(p);
            mesu.setText(m);
            priceAfter.setText(p);
            hidepricebuytxt.setText(buy);
            hidepricesaletxt.setText(p);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jcatItemStateChanged

    private void newCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCatActionPerformed
        idBil.setText(DB.GoDB.autoNumber("bill", "numberbill"));
        idLine.setText(DB.GoDB.auto("billline", "number", "numberbill", idBil.getText()));
        numid.setText(DB.GoDB.autoNumber("billline", "numberLine"));

        saveAndPrint.setEnabled(false);
        save.setEnabled(false);
        newCat.setEnabled(true);
        delete.setEnabled(false);

        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("السعر");
        table.addColumn("العدد او الكمية");
        table.addColumn("القسم");
        table.addColumn("اسم الصنف");
        table.addColumn("رقم الفاتورة");
        table.addColumn("الرقم");
        table.setNumRows(10);
        jTsale.setModel(table);

        barcode.setText("");
        count.setText("");
        mesu.setText("");
        jsec.setSelectedItem(null);
        jcat.setSelectedItem(null);
        price.setText("");
        cost.setText("");
        paied.setText("");
        discount.setText("");
        remaining.setText("");
        total.setText("");
        countCat.setText("");

        category1.clear();
        coun1.clear();
        price1.clear();
    }//GEN-LAST:event_newCatActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int d = JOptionPane.showConfirmDialog(this, "هل تريد حذف الصنف المحدد ؟");
        if (d == JOptionPane.YES_OPTION) {
            int row = jTsale.getSelectedRow();
            String n = jTsale.getValueAt(row, 4).toString();
            String numB = jTsale.getValueAt(row, 5).toString();
            String nuCu = jTsale.getValueAt(row, 1).toString();
            String ca = jTsale.getValueAt(row, 3).toString();
            String prc = jTsale.getValueAt(row, 0).toString();

            // استعلام عن عدد الصنف في المخزن واضافة الصنف المحذوف
            try {
                Connection c = ConectionDB.setcon();
                Statement stm = c.createStatement();
                String sqls = "select count as count1 from categories where category ='" + ca + "'";
                ResultSet rs = stm.executeQuery(sqls);
                String nu = "";
                while (rs.next()) {
                    nu = stm.getResultSet().getString("count1");
                }
                c.close();

                if (nu == null || "".equals(nu)) {
                    JOptionPane.showMessageDialog(null, "لايوجد من هذا الصنف");
                } else {

                    // حذف الصنف وارجاعة المخزن
                    String strD = "DELETE FROM BILLLINE WHERE NUMBER =" + numB + " and NumberBill=" + n;
                    boolean ifD = DB.GoDB.runNunQuery(strD);
                    if (ifD) {
                        JOptionPane.showMessageDialog(null, "تم حذف الصنف المحدد", "نجح", JOptionPane.WARNING_MESSAGE);

                        int countTotal = Integer.parseInt(nu) + Integer.parseInt(nuCu);
                        String update = "UPDATE CATEGORIES SET COUNT = '" + countTotal + "' WHERE CATEGORY = '" + ca + "'";
                        DB.GoDB.runNunQuery(update);
                        System.out.println("done");

                        int remoNum = Integer.parseInt(numB);
                        category1.remove(ca);
                        coun1.remove(nuCu);
                        price1.remove(prc);
                    } else {
                        JOptionPane.showMessageDialog(null, "لم يتم حذف الصنف", "خطأ", JOptionPane.WARNING_MESSAGE);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

            idBil.setText(DB.GoDB.autoNumber("bill", "numberbill"));
            idLine.setText(DB.GoDB.auto("billline", "number", "numberbill", idBil.getText()));
            numid.setText(DB.GoDB.autoNumber("billline", "numberLine"));
            listSale();
            delete.setEnabled(false);

            // الاستعلام عن مجموع او اجمالي الفاتورة
            try {
                Connection con = ConectionDB.setcon();
                Statement stm = con.createStatement();
                String sqls = "select sum(price) as pr from billline where numberbill=" + idBil.getText();
                ResultSet rs = stm.executeQuery(sqls);
                String num = "";
                while (rs.next()) {
                    num = stm.getResultSet().getString("pr");
                }
                con.close();
                if (num == null || "".equals(num)) {
                    cost.setText("0");
                    total.setText("0");
                } else {
                    cost.setText(num);
                    total.setText(num);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            // الاستعلام عن عدد اصناف الفاتورة
            try {
                Connection con = ConectionDB.setcon();
                Statement stm = con.createStatement();
                String sqls = "select count(number) as num from billline where numberbill=" + idBil.getText();
                ResultSet rs = stm.executeQuery(sqls);
                String num = "";
                while (rs.next()) {
                    num = stm.getResultSet().getString("num");
                }
                con.close();
                if (num == null || "".equals(num)) {
                    countCat.setText("0");
                } else {
                    countCat.setText(num);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

        }
    }//GEN-LAST:event_deleteActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if ("".equals(idBil.getText()) || "".equals(numid.getText()) || "".equals(timetx.getText()) || "".equals(jDate.getText()) || "".equals(idLine.getText()) || "".equals(jsec.getSelectedItem()) || "".equals(jcat.getSelectedItem()) || "".equals(count.getText()) || "".equals(mesu.getText()) || "".equals(price.getText()) || "".equals(priceAfter.getText())) {
            JOptionPane.showMessageDialog(this, "يجب ملئ البيانات اولا", "خطأ", JOptionPane.ERROR_MESSAGE);
        } else {

            // الاستعلام عن عدد الصنف في المخزن وانقاص منه
            try {
                Connection c = ConectionDB.setcon();
                Statement stm = c.createStatement();
                String sqls = "select count as count1 from categories where category ='" + jcat.getSelectedItem() + "'";
                ResultSet rs = stm.executeQuery(sqls);
                String num = "";
                while (rs.next()) {
                    num = stm.getResultSet().getString("count1");
                }

                if (num == null || "".equals(num) || "0".equals(num)) {
                    JOptionPane.showMessageDialog(null, "لايوجد من هذا الصنف");
                } else {
                    //  ادخال اصناف الفاتورة
                    String sqlsL = "INSERT INTO BILLLINE VALUES (" + numid.getText() + ", '" + jDate.getText() + "' , '" + idLine.getText() + "', " + idBil.getText() + ", '" + jsec.getSelectedItem() + "', '" + jcat.getSelectedItem() + "', '" + hidepricebuytxt.getText() + "', " + hidepricesaletxt.getText() + ", '" + mesu.getText() + "', '" + count.getText() + "', '" + priceAfter.getText() + "')";
                    boolean ifSL = DB.GoDB.runNunQuery(sqlsL);
                    if (ifSL) {
                        JOptionPane.showMessageDialog(this, "تم اضافة الصنف", "نجح", JOptionPane.WARNING_MESSAGE);
                        newCat.setEnabled(false);
                        saveAndPrint.setEnabled(true);
                        save.setEnabled(true);
                        print.setEnabled(true);

                        idLine.setText(DB.GoDB.auto("billline", "number", "numberbill", idBil.getText()));
                        numid.setText(DB.GoDB.autoNumber("billline", "numberLine"));
                        listSale();

                        String cat = jcat.getSelectedItem().toString();
                        category1.add(cat);
                        coun1.add(count.getText());
                        price1.add(priceAfter.getText());

                        if ("زجاجه".equals(mesu.getText()) || "متر".equals(mesu.getText()) || "كيس".equals(mesu.getText()) || "علبة".equals(mesu.getText())) {
                            int countTotal = Integer.parseInt(num) - Integer.parseInt(count.getText());
                            String update = "UPDATE CATEGORIES SET COUNT = '" + countTotal + "' WHERE CATEGORY = '" + jcat.getSelectedItem() + "'";
                            DB.GoDB.runNunQuery(update);
                            System.out.println("done");
                        } else if ("كيلو جرام".equals(mesu.getText())) {

                        } else if ("جرام".equals(mesu.getText())) {
                            int countTotal = Integer.parseInt(num) - Integer.parseInt(count.getText());
                            String update = "UPDATE CATEGORIES SET COUNT = '" + countTotal + "' WHERE CATEGORY = '" + jcat.getSelectedItem() + "'";
                            DB.GoDB.runNunQuery(update);
                            System.out.println("done");
                        } else {
                            priceAfter.setEditable(true);
                        }

                        barcode.setText("");
                        count.setText("");
                        mesu.setText("");
                        jsec.setSelectedItem(null);
                        jcat.setSelectedItem(null);
                        price.setText("");
                        priceAfter.setText("");
                        discount.setText("0");
                    } else {
                        JOptionPane.showMessageDialog(this, "لم يتم اضافة الصنف", "خطأ", JOptionPane.ERROR_MESSAGE);
                    }
                }
                // الاستعلام عن مجموع او اجمالي الفاتورة

                Connection con2 = ConectionDB.setcon();
                Statement stm2 = con2.createStatement();
                String sqls2 = "select sum(price) as pr , sum(price_buy * count) as prb from billline where numberbill=" + idBil.getText();
                ResultSet rs2 = stm2.executeQuery(sqls2);
                String num2 = "";
                String numBuy = "";
                while (rs2.next()) {
                    num2 = rs2.getString("pr");
                    numBuy = rs2.getString("prb");
                }
                if (num2 == null || "".equals(num2)) {
                    cost.setText("0");
                    total.setText("0");
                    totalbuytxt.setText("0");
                } else {
                    cost.setText(num2);
                    total.setText(num2);
                    totalbuytxt.setText(numBuy);
                }

                // الاستعلام عن عدد الاصناف في الفاتورة
                Connection con3 = ConectionDB.setcon();
                Statement stm3 = con3.createStatement();
                String sqls3 = "select count(number) as num from billline where numberbill=" + idBil.getText();
                ResultSet rs3 = stm.executeQuery(sqls3);
                String num3 = "0";
                while (rs3.next()) {
                    num3 = rs3.getString("num");
                }

                if (num3 == null || "".equals(num3)) {
                    countCat.setText("0");
                } else {
                    countCat.setText(num3);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

        }
    }//GEN-LAST:event_addActionPerformed

    private void returnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBActionPerformed
        String t = total.getText();
        paied.setText(t);
        remaining.setText("0");
    }//GEN-LAST:event_returnBActionPerformed

    private void costKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costKeyTyped
        if ("".equals(discount.getText())) {
            String t = cost.getText();
            total.setText(t);
        }
    }//GEN-LAST:event_costKeyTyped

    private void saveAndPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAndPrintActionPerformed
        if ("".equals(idBil.getText()) || "".equals(timetx.getText()) || "".equals(jDate.getText()) || "".equals(EmpNameB.getText()) || "".equals(cost.getText()) || "".equals(total.getText()) || "0".equals(cost.getText()) || "0".equals(total.getText())) {
            JOptionPane.showMessageDialog(this, "يجب ملئ البيانات اولا", "خطأ", JOptionPane.ERROR_MESSAGE);
        } else {
            String sqlsL = "INSERT INTO BILL VALUES (" + idBil.getText() + ", '" + timetx.getText() + "', '" + jDate.getText() + "', '" + EmpNameB.getText() + "', '" + totalbuytxt.getText() + "', '" + cost.getText() + "' , '" + discount.getText() + "', '" + total.getText() + "')";
            boolean ifSL = DB.GoDB.runNunQuery(sqlsL);
            if (ifSL) {
                JOptionPane.showMessageDialog(this, "تم حفظ الفاتورة", "نجح", JOptionPane.WARNING_MESSAGE);

                int r = category1.size();
                int s;
                int c = coun1.size();
                int d;
                int p = price1.size();
                int m;

                String bi = "<div style=\"height:400px ; width: 200px\"> "
                        + "            <br> "
                        + "            <div align=\"center\"><b  style=\"font-weight:bold;font-size:20px;margin-right:90px;\">      Market </b></div><br> "
                        + "            &nbsp;&nbsp; ================================= <br> "
                        + "            <div align=\"right\"><table border=\"0\" style=\"margin-right:10px;\">                \n"
                        + "                <tbody>\n"
                        + "                    <tr>\n"
                        + "                        <td>" + idBil.getText() + "</td>\n"
                        + "                        <td>:رقم الفاتورة </td>\n"
                        + "                    </tr>\n"
                        + "                    <tr>                        \n"
                        + "                        <td>" + jDate.getText() + "</td>\n"
                        + "                        <td>:تاريخ الفاتورة </td>\n"
                        + "                    </tr>\n"
                        + "                    <tr>                       \n"
                        + "                        <td>" + timetx.getText() + "</td>\n"
                        + "                        <td>:وقت الفاتورة </td>\n"
                        + "                    </tr>\n"
                        + "                </tbody>\n"
                        + "            </table> </div> "
                        + "            &nbsp;&nbsp; ================================= <br>\n"
                        + "            <table border=\"1\" style=\"margin-left:15px; width:180px\"> "
                        + "                <thead> "
                        + "                    <tr> "
                        + "                        <th>الصنف</th> "
                        + "                        <th>العدد</th> "
                        + "                        <th>السعر</th> "
                        + "                    </tr> "
                        + "                </thead> "
                        + "                <tbody>";
                for (s = 0; s < r; s++) {
                    bi += " <tr> "
                            + " <td>" + category1.get(s) + "</td> "
                            + " <td>" + coun1.get(s) + "</td> "
                            + " <td>" + price1.get(s) + "</td> ";
                }
                bi += "                    </tr>   "
                        + "                </tbody> "
                        + "            </table> <br>"
                        + "            &nbsp;&nbsp; ================================= <br> "
                        + "            <div align=\"right\"><table border=\"0\" style=\"margin-right:10px;font-size: 14px; font-weight: bold\">                \n"
                        + "                <tbody>\n"
                        + "                    <tr>\n"
                        + "                        <td>" + "جنية &nbsp;" + "</td>\n"
                        + "                        <td>" + discount.getText() + "</td>\n"
                        + "                        <td>:الخصم </td>\n"
                        + "                    </tr>\n"
                        + "                    <tr>                        \n"
                        + "                        <td>" + "جنية &nbsp;" + "</td>\n"
                        + "                        <td>" + total.getText() + "</td>\n"
                        + "                        <td>:إجمالي </td>\n"
                        + "                    </tr>\n"
                        + "                </tbody>\n"
                        + "            </table> </div>";

                printbill.setContentType("text/html");
                printbill.setText(bi);
                print prn = new print();
                prn.setDefaultCloseOperation(2);
                prn.setVisible(true);
                DB.GoDB.icon(prn);

                newCat.setEnabled(true);
                delete.setEnabled(false);
                barcode.setText("");
                count.setText("");
                mesu.setText("");
                jsec.setSelectedItem(null);
                jcat.setSelectedItem(null);
                price.setText("");
                cost.setText("");
                paied.setText("");
                discount.setText("");
                remaining.setText("");
                total.setText("");
                countCat.setText("");

                idBil.setText(DB.GoDB.autoNumber("bill", "numberbill"));
                idLine.setText(DB.GoDB.auto("billline", "number", "numberbill", idBil.getText()));
                numid.setText(DB.GoDB.autoNumber("billline", "numberLine"));

                saveAndPrint.setEnabled(false);
                save.setEnabled(false);
                print.setEnabled(false);

                DefaultTableModel table = new DefaultTableModel();
                table.addColumn("السعر");
                table.addColumn("العدد او الكمية");
                table.addColumn("القسم");
                table.addColumn("اسم الصنف");
                table.addColumn("رقم الفاتورة");
                table.addColumn("الرقم");
                table.setNumRows(10);
                jTsale.setModel(table);
                category1.clear();
                coun1.clear();
                price1.clear();

            } else {
                JOptionPane.showMessageDialog(this, "لم يتم حفظ الفاتورة", "خطأ", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveAndPrintActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        if ("".equals(idBil.getText()) || "".equals(timetx.getText()) || "".equals(jDate.getText()) || "".equals(EmpNameB.getText()) || "".equals(cost.getText()) || "".equals(total.getText()) || "0".equals(cost.getText()) || "0".equals(total.getText())) {
            JOptionPane.showMessageDialog(this, "يجب ملئ البيانات اولا", "خطأ", JOptionPane.ERROR_MESSAGE);
        } else {
            String sqlsL = "INSERT INTO BILL VALUES (" + idBil.getText() + ", '" + timetx.getText() + "', '" + jDate.getText() + "', '" + EmpNameB.getText() + "', '" + totalbuytxt.getText() + "', '" + cost.getText() + "' , '" + discount.getText() + "', '" + total.getText() + "')";
            boolean ifSL = DB.GoDB.runNunQuery(sqlsL);
            if (ifSL) {
                JOptionPane.showMessageDialog(this, "تم حفظ الفاتورة", "نجح", JOptionPane.WARNING_MESSAGE);

                idBil.setText(DB.GoDB.autoNumber("bill", "numberbill"));
                idLine.setText(DB.GoDB.auto("billline", "number", "numberbill", idBil.getText()));
                numid.setText(DB.GoDB.autoNumber("billline", "numberLine"));

                saveAndPrint.setEnabled(false);
                save.setEnabled(false);
                print.setEnabled(false);

                DefaultTableModel table = new DefaultTableModel();
                table.addColumn("السعر");
                table.addColumn("العدد او الكمية");
                table.addColumn("القسم");
                table.addColumn("اسم الصنف");
                table.addColumn("رقم الفاتورة");
                table.addColumn("الرقم");
                table.setNumRows(10);
                jTsale.setModel(table);

                newCat.setEnabled(true);
                delete.setEnabled(false);
                barcode.setText("");
                count.setText("");
                mesu.setText("");
                jsec.setSelectedItem(null);
                jcat.setSelectedItem(null);
                price.setText("");
                cost.setText("");
                paied.setText("");
                discount.setText("");
                remaining.setText("");
                total.setText("");
                countCat.setText("");

                category1.clear();
                coun1.clear();
                price1.clear();

            } else {
                JOptionPane.showMessageDialog(this, "لم يتم حفظ الفاتورة", "خطأ", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jTsaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTsaleMouseClicked
        delete.setEnabled(true);
    }//GEN-LAST:event_jTsaleMouseClicked

    private void jsecItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jsecItemStateChanged
        DB.GoDB.fillCompo2("categories", "category", "section", jsec.getSelectedItem(), jcat);
        jcat.setSelectedItem(null);
    }//GEN-LAST:event_jsecItemStateChanged

    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped

    }//GEN-LAST:event_priceKeyTyped

    private void countKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countKeyTyped

    }//GEN-LAST:event_countKeyTyped

    private void countFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countFocusLost
        try {
            if ("زجاجه".equals(mesu.getText()) || "متر".equals(mesu.getText()) || "كيس".equals(mesu.getText()) || "علبة".equals(mesu.getText())) {
                double prs = Double.parseDouble(price.getText());
                int cunt = Integer.parseInt(count.getText());

                double t = prs * cunt;
                priceAfter.setText(String.valueOf(t));
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_countFocusLost

    private void countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countActionPerformed
        try {
            if ("زجاجه".equals(mesu.getText()) || "متر".equals(mesu.getText()) || "كيس".equals(mesu.getText()) || "علبة".equals(mesu.getText())) {
                double prs = Double.parseDouble(price.getText());
                int cunt = Integer.parseInt(count.getText());

                double t = prs * cunt;
                priceAfter.setText(String.valueOf(t));
            } else if ("كيلو جرام".equals(mesu.getText())) {
                double pric = Double.parseDouble(price.getText());
                double gram = pric / 1000;
                double cost = gram * Double.parseDouble(count.getText());
                priceAfter.setText(String.valueOf(cost));
            } else if ("جرام".equals(mesu.getText())) {
                double gram = Double.parseDouble(price.getText());
                double cost = gram * Double.parseDouble(count.getText());
                priceAfter.setText(String.valueOf(cost));
            } else {
                priceAfter.setEditable(true);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_countActionPerformed

    private void paiedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paiedActionPerformed
        try {
            double cs = Double.parseDouble(total.getText());
            double pa = Double.parseDouble(paied.getText());
            double tot = pa - cs;
            remaining.setText(String.valueOf(tot));
            double r = Double.parseDouble(remaining.getText());
            if (r > 0.0) {
                returnB.setEnabled(true);
            } else {
                returnB.setEnabled(false);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_paiedActionPerformed

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        try {
            double cs = Double.parseDouble(cost.getText());
            double di = Double.parseDouble(discount.getText());
            double tot = cs - di;
            total.setText(String.valueOf(tot));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_discountActionPerformed

    ArrayList<String> category1 = new ArrayList<>();
    ArrayList<String> coun1 = new ArrayList<>();
    ArrayList<String> price1 = new ArrayList<>();
    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        int r = category1.size();
        int s;
        int c = coun1.size();
        int d;
        int p = price1.size();
        int m;

        String bi = "<div style=\"height:400px ; width: 200px\"> "
                + "            <br> "
                + "            <div align=\"center\"><b  style=\"font-weight:bold;font-size:20px;margin-right:90px;\">      Market </b></div><br> "
                + "            &nbsp;&nbsp; ================================= <br> "
                + "            <div align=\"right\"><table border=\"0\" style=\"margin-right:10px;\">                \n"
                + "                <tbody>\n"
                + "                    <tr>\n"
                + "                        <td>" + idBil.getText() + "</td>\n"
                + "                        <td>:رقم الفاتورة </td>\n"
                + "                    </tr>\n"
                + "                    <tr>                        \n"
                + "                        <td>" + jDate.getText() + "</td>\n"
                + "                        <td>:تاريخ الفاتورة </td>\n"
                + "                    </tr>\n"
                + "                    <tr>                       \n"
                + "                        <td>" + timetx.getText() + "</td>\n"
                + "                        <td>:وقت الفاتورة </td>\n"
                + "                    </tr>\n"
                + "                </tbody>\n"
                + "            </table> </div> "
                + "            &nbsp;&nbsp; ================================= <br>\n"
                + "            <table border=\"1\" style=\"margin-left:15px; width:180px\"> "
                + "                <thead> "
                + "                    <tr> "
                + "                        <th>الصنف</th> "
                + "                        <th>العدد</th> "
                + "                        <th>السعر</th> "
                + "                    </tr> "
                + "                </thead> "
                + "                <tbody>";
        for (s = 0; s < r; s++) {
            bi += " <tr> "
                    + " <td>" + category1.get(s) + "</td> "
                    + " <td>" + coun1.get(s) + "</td> "
                    + " <td>" + price1.get(s) + "</td> ";
        }
        bi += "                    </tr>   "
                + "                </tbody> "
                + "            </table> <br>"
                + "            &nbsp;&nbsp; ================================= <br> "
                + "            <div align=\"right\"><table border=\"0\" style=\"margin-right:10px;font-size: 14px; font-weight: bold\">                \n"
                + "                <tbody>\n"
                + "                    <tr>\n"
                + "                        <td>" + "جنية &nbsp;" + "</td>\n"
                + "                        <td>" + discount.getText() + "</td>\n"
                + "                        <td>:الخصم </td>\n"
                + "                    </tr>\n"
                + "                    <tr>                        \n"
                + "                        <td>" + "جنية &nbsp;" + "</td>\n"
                + "                        <td>" + total.getText() + "</td>\n"
                + "                        <td>:إجمالي </td>\n"
                + "                    </tr>\n"
                + "                </tbody>\n"
                + "            </table> </div>";

        printbill.setContentType("text/html");
        printbill.setText(bi);
        print prn = new print();
        prn.setDefaultCloseOperation(2);
        prn.setVisible(true);
        DB.GoDB.icon(prn);
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static final javax.swing.JTextField EmpNameB = new javax.swing.JTextField();
    private javax.swing.JButton add;
    private javax.swing.JTextField barcode;
    private javax.swing.JTextField cost;
    private javax.swing.JTextField count;
    private javax.swing.JTextField countCat;
    private javax.swing.JButton delete;
    private javax.swing.JTextField discount;
    private javax.swing.JTextField hidepricebuytxt;
    private javax.swing.JTextField hidepricesaletxt;
    private javax.swing.JButton home;
    private javax.swing.JTextField idBil;
    private javax.swing.JTextField idLine;
    private javax.swing.JTextField jDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTsale;
    private javax.swing.JComboBox<String> jcat;
    private javax.swing.JComboBox<String> jsec;
    private javax.swing.JTextField mesu;
    private javax.swing.JButton newCat;
    private javax.swing.JTextField numid;
    private javax.swing.JTextField paied;
    private javax.swing.JTextField price;
    private javax.swing.JTextField priceAfter;
    private javax.swing.JButton print;
    private javax.swing.JTextField remaining;
    private javax.swing.JButton returnB;
    private javax.swing.JButton save;
    private javax.swing.JButton saveAndPrint;
    private javax.swing.JTextField timetx;
    private javax.swing.JTextField total;
    private javax.swing.JTextField totalbuytxt;
    // End of variables declaration//GEN-END:variables
}
